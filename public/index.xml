<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pascal Walloner</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Pascal Walloner</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Jul 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Projects</title>
      <link>http://localhost:1313/projects/</link>
      <pubDate>Sat, 19 Jul 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/</guid>
      <description>&lt;h2 id=&#34;neural-surface-compression&#34;&gt;Neural Surface Compression &lt;a href=&#34;#neural-surface-compression&#34; class=&#34;anchor&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;2024, &lt;em&gt;Research, Education, Master Thesis&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Neural compression models are not restricted to texture space inputs.&#xA;This is a research piece on a neural texture compression method that parameterizes material data on the object&amp;rsquo;s surface, circumventing the need for UV-mapping.&#xA;I examine if the method can achieve sufficient visual quality at high compression rates without the requiring 3D models to be UV-mapped.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://gupea.ub.gu.se/handle/2077/84873&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Paper&lt;/a&gt;, &lt;a href=&#34;https://github.com/pacex/neural-surface&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;volumetric-cloud-renderer&#34;&gt;Volumetric Cloud Renderer &lt;a href=&#34;#volumetric-cloud-renderer&#34; class=&#34;anchor&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;2023, &lt;em&gt;Education&lt;/em&gt;&lt;/p&gt;&#xA;&lt;div style=&#34;text-align: center;&#34;&gt;&#xD;&#xA;  &lt;img src=&#34;http://localhost:1313/projects/clouds.png&#34; style=&#34;width: 100%; max-width: 900px;&#34;&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;p&gt;A volumetric cloud renderer written in C++ using OpenGL.&#xA;My implementation marches along view rays and samples a 3D gradient noise function as cloud density.&#xA;Accumulated density samples serve as transmittance estimates to compute shading.&#xA;We optimize via transmittance-dependent step sizes and mitigate artifacts using blue noise sample offsets.&lt;/p&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Mon, 09 Jun 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/about/</guid>
      <description>&lt;div style=&#34;text-align: center;&#34;&gt;&#xD;&#xA;  &lt;img src=&#34;http://localhost:1313/profile.jpeg&#34; style=&#34;width: 30%; max-width: 200px;&#34; alt=&#34;Profile picture&#34;&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;p&gt;Hello! My name is Pascal and I am a recent Computer Science graduate who now works as a software developer with a focus on 3D visualization.&#xA;I am passionate about all things game development and computer graphics.&#xA;Sometimes, I try my hand at writing accessible explainers about the topics I am interested in and publish them on this page.&#xA;I&amp;rsquo;m always open to feedback and questions!&lt;/p&gt;</description>
    </item>
    <item>
      <title>License</title>
      <link>http://localhost:1313/license/</link>
      <pubDate>Tue, 26 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/license/</guid>
      <description>&lt;p xmlns:cc=&#34;http://creativecommons.org/ns#&#34; &gt;All work on this page by &lt;a rel=&#34;cc:attributionURL dct:creator&#34; property=&#34;cc:attributionName&#34; href=&#34;https://pascalwalloner.com&#34;&gt;Pascal Walloner&lt;/a&gt; is licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/?ref=chooser-v1&#34; target=&#34;_blank&#34; rel=&#34;license noopener noreferrer&#34; style=&#34;display:inline-block;&#34;&gt;CC BY 4.0&lt;img style=&#34;height:22px!important;margin-left:3px;vertical-align:text-bottom;&#34; src=&#34;https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1&#34; alt=&#34;&#34;&gt;&lt;img style=&#34;height:22px!important;margin-left:3px;vertical-align:text-bottom;&#34; src=&#34;https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bringing Characters to Life: The Fundamentals of Skeletal Animation</title>
      <link>http://localhost:1313/posts/skeletal_animation/</link>
      <pubDate>Fri, 22 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/skeletal_animation/</guid>
      <description>&lt;p&gt;When rendering a 3D game&amp;rsquo;s world, static meshes are often sufficient for modeling the environment like terrain, buildings and other objects.&#xA;However, if we want it to appear inhabited, we won&amp;rsquo;t get around filling the world with creatures and characters that move and interact.&#xA;This is where animation comes into play.&lt;/p&gt;&#xA;&lt;p&gt;2D games typically realize such animations by displaying different sprite images in quick succession to create the illusion of motion.&#xA;Composing a 3D animation of individual frames in a similar way, however, quickly becomes impractical due to the sheer amount of data.&#xA;Instead, 3D games use an underlying bone structure to control a model&amp;rsquo;s movement in a technique called &lt;em&gt;skeletal animation&lt;/em&gt;.&#xA;This method is not only much more efficient than animating 3D models frame by frame, but also provides a more flexible workflow when animating and allows for perfectly smooth motion through interpolation.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
